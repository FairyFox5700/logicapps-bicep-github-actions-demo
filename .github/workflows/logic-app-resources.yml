name: Deploy Logic App and related resources

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #  branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # This part (i.e. inputs) could be easily removed. It's here to easily allow deployment mode switching between *Complete* and *Incremental*.
    inputs:
      deployment_mode:
        description: 'Bicep template deployment mode (Complete/Incremental)'
        required: true
        default: 'Complete' # 'Complete' or 'Incremental'
        type: string

# Define environment variables
env:
  RESOURCE_GROUP_NAME: samikomulainen-azuredemo2
  TEMPLATE_PATH: logic-app-resources/template.bicep
  PARAMETERS_PATH: logic-app-resources/parameters.json
  DEPLOYMENT_MODE: ${{ github.event.inputs.deployment_mode }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Do Azure login using your service principals
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS_LA
          creds: ${{ secrets.AZURE_CREDENTIALS_LA }}

      - name: Run Bicep linter
        run: az bicep build -f ${{ env.TEMPLATE_PATH }}

      - name: Deploy resources
        run: |
          echo "*** Set correct subscription (in case your Azure account has more than one active subscriptions) ***"
          az account set -s ${{ secrets.SUBSCRIPTION_ID }}
          echo "*** Install Bicep ***"
          az bicep install
          echo "*** Validate Bicep file ***"
          az deployment group validate -f ${{ env.TEMPLATE_PATH }} -g ${{ env.RESOURCE_GROUP_NAME }} \
            --mode ${{ env.DEPLOYMENT_MODE }} -p ${{ env.PARAMETERS_PATH }} \
            -p sqlUser='${{ secrets.SQL_USER }}' sqlPass='${{ secrets.SQL_PASS }}'
          echo "*** Do deploy ***"
          az deployment group create -n logicappdeploy -f ${{ env.TEMPLATE_PATH }} -g ${{ env.RESOURCE_GROUP_NAME }} \
            --mode ${{ env.DEPLOYMENT_MODE }} -p ${{ env.PARAMETERS_PATH }} \
            -p sqlUser='${{ secrets.SQL_USER }}' sqlPass='${{ secrets.SQL_PASS }}'
